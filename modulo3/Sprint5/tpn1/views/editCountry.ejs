<!DOCTYPE html>
<html >
<head>
  <link rel="stylesheet" href="/css/styles.css">
  <title>Editar País</title>
</head>
<body >
  <h1 style="text-align: center;">Editar País</h1>
  <form id="editCountryForm" >

    <label for="officialName">Nombre Oficial:</label>
    <input type="text" id="officialName" value="<%= country.name.official %>" required><br>

    <label for="capital">Capital:</label>
    <input type="text" id="capital" value="<%= country.capital[0] %>" required><br>

    <label for="population">Población:</label>
    <input type="number" id="population" value="<%= country.population %>" required><br>

    <label for="area">Área:</label>
    <input type="number" id="area" value="<%= country.area %>" required><br>

    <label for="borders">borders:</label>
    <input type="text" id="borders" value="<%= country.borders %>" required><br>

    <label for="creator">Creador:</label>
    <input type="text" id="creator" value="<%= country.creator %>" required><br>


    <button type="button" id="submitButton">Guardar Cambios</button>
  </form>

  <script>
    document.getElementById('submitButton').addEventListener('click', async () => {
      const countryId = '<%= country._id %>'; // ID del país
      const url = `/apipais/countries/${countryId}`;

      // Recopilar datos del formulario
      const data = {
        name: {
          // common: document.getElementById('commonName').value,
          official: document.getElementById('officialName').value
        },
        capital: [document.getElementById('capital').value],
        population: parseInt(document.getElementById('population').value, 10),
        area: parseInt(document.getElementById('area').value, 10),
        creator: document.getElementById('creator').value,
        borders: document
              .getElementById("borders")
              .value.split(",")
              .map((border) => border.trim()),
      };

      try {
        const response = await fetch(url, {
          method: 'PUT', // Cambiar a PUT
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          const errorMessage = await response.text();
          alert(`Error al actualizar el país: ${errorMessage}`);
          return;
        }

        alert('País actualizado exitosamente');
        window.location.href = '/'; // Redirigir después de la actualización
      } catch (error) {
        alert(`Error al actualizar el país: ${error.message}`);
      }
    });
  </script>
</body>
</html>
<!-- <!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="/css/styles.css">

  <title>Editar País</title>
</head>
<body>
  <h1>Editar País</h1>
  <form id="editCountryForm">
    <label for="commonName">Nombre Común:</label>
    <input type="text" id="commonName" value="<%= country.name.common %>"><br>

    <label for="officialName">Nombre Oficial:</label>
    <input type="text" id="officialName" value="<%= country.name.official %>"><br>

    <label for="capital">Capital:</label>
    <input type="text" id="capital" value="<%= country.capital[0] %>"><br>

    <label for="region">Región:</label>
    <input type="text" id="region" value="<%= country.region %>"><br>

    <label for="subregion">Subregión:</label>
    <input type="text" id="subregion" value="<%= country.subregion %>"><br>

    <label for="population">Población:</label>
    <input type="number" id="population" value="<%= country.population %>"><br>

    <label for="area">Área:</label>
    <input type="number" id="area" value="<%= country.area %>"><br>

    <button type="button" id="submitButton">Guardar Cambios</button>
  </form>

  <script>
    document.getElementById('submitButton').addEventListener('click', async () => {
      const countryId = '<%= country._id %>'; // ID del país
      const url = `/apipais/countries/${countryId}`;

      // Recopilar datos del formulario
      const data = {
        name: {
          common: document.getElementById('commonName').value,
          official: document.getElementById('officialName').value
        },
        capital: [document.getElementById('capital').value],
        region: document.getElementById('region').value,
        subregion: document.getElementById('subregion').value,
        population: parseInt(document.getElementById('population').value, 10),
        area: parseInt(document.getElementById('area').value, 10)
      };

      try {
        const response = await fetch(url, {
          method: 'PUT', // Cambiar a PUT
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          const errorMessage = await response.text();
          alert(`Error al actualizar el país: ${errorMessage}`);
          return;
        }

        alert('País actualizado exitosamente');
        window.location.href = '/'; // Redirigir después de la actualización
      } catch (error) {
        alert(`Error al actualizar el país: ${error.message}`);
      }
    });
  </script>
</body>
</html> -->